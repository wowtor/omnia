sensor:
#  - platform: modbus_controller
#    modbus_controller_id: "${prefix}_modbus"
#    name: "${friendly_prefix} water temperature setpoint (duplicate)"
#    id: "${prefix}_water_temperature_setpoint_duplicate"
#    register_type: holding
#    address: 2
#    unit_of_measurement: "°C"
#    value_type: U_WORD
#    device_class: TEMPERATURE
#    entity_category: DIAGNOSTIC
#    bitmask: 0xff
#    disabled_by_default: true
  - platform: modbus_controller
    modbus_controller_id: "${prefix}_modbus"
    name: "${friendly_prefix} curve selected"
    id: "${prefix}_climate_curve_selected"
    register_type: holding
    address: 6
    value_type: U_WORD
    entity_category: DIAGNOSTIC
    bitmask: 0xff
    disabled_by_default: true
  - platform: modbus_controller
    modbus_controller_id: "${prefix}_modbus"
    name: "${friendly_prefix} operating frequency"
    id: "${prefix}_operating_frequency"
    register_type: holding
    address: 100
    unit_of_measurement: "Hz"
    value_type: U_WORD
    entity_category: DIAGNOSTIC
    disabled_by_default: true
  - platform: modbus_controller
    modbus_controller_id: "${prefix}_modbus"
    name: "${friendly_prefix} fan speed"
    id: "${prefix}_fan_speed"
    icon: "mdi:wind-power"
    register_type: holding
    address: 102
    unit_of_measurement: "r/min"
    value_type: U_WORD
    entity_category: DIAGNOSTIC
  - platform: modbus_controller
    modbus_controller_id: "${prefix}_modbus"
    name: "${friendly_prefix} expansion valve openness"
    id: "${prefix}_pmv_openness"
    register_type: holding
    address: 103
    unit_of_measurement: "%"
    value_type: U_WORD
    entity_category: DIAGNOSTIC
  - platform: modbus_controller
    modbus_controller_id: "${prefix}_modbus"
    name: "${friendly_prefix} water inlet temperature"
    id: "${prefix}_water_inlet_temperature"
    register_type: holding
    address: 104
    device_class: TEMPERATURE
    unit_of_measurement: "°C"
    icon: "mdi:thermometer-water"
    value_type: U_WORD
    entity_category: DIAGNOSTIC
  - platform: modbus_controller
    modbus_controller_id: "${prefix}_modbus"
    name: "${friendly_prefix} Water outlet temperature"
    id: "${prefix}_water_outlet_temperature"
    register_type: holding
    address: 105
    device_class: TEMPERATURE
    unit_of_measurement: "°C"
    icon: "mdi:thermometer-water"
    value_type: U_WORD
    entity_category: DIAGNOSTIC
  - platform: modbus_controller
    modbus_controller_id: "${prefix}_modbus"
    name: "${friendly_prefix} condenser temperature"
    id: "${prefix}_condenser_temperature"
    register_type: holding
    address: 106
    device_class: TEMPERATURE
    unit_of_measurement: "°C"
    value_type: U_WORD
    entity_category: DIAGNOSTIC
    disabled_by_default: true
  - platform: modbus_controller
    modbus_controller_id: "${prefix}_modbus"
    name: "${friendly_prefix} ambient temperature"
    id: "${prefix}_ambient_temperature"
    register_type: holding
    address: 107
    device_class: TEMPERATURE
    unit_of_measurement: "°C"
    entity_category: DIAGNOSTIC
    value_type: S_WORD
  - platform: modbus_controller
    modbus_controller_id: "${prefix}_modbus"
    name: "${friendly_prefix} condenser discharge temperature"
    id: "${prefix}_condenser_discharge_temperature"
    register_type: holding
    address: 108
    device_class: TEMPERATURE
    unit_of_measurement: "°C"
    entity_category: DIAGNOSTIC
    value_type: U_WORD
    disabled_by_default: true
  - platform: modbus_controller
    modbus_controller_id: "${prefix}_modbus"
    name: "${friendly_prefix} condenser suction temperature"
    id: "${prefix}_condenser_suction_temperature"
    register_type: holding
    address: 109
    device_class: TEMPERATURE
    unit_of_measurement: "°C"
    entity_category: DIAGNOSTIC
    value_type: U_WORD
    disabled_by_default: true
  - platform: modbus_controller
    modbus_controller_id: "${prefix}_modbus"
    name: "${friendly_prefix} refrigerant liquid side temperature"
    id: "${prefix}_refrigerant_liquid_temp"
    register_type: holding
    address: 112
    entity_category: DIAGNOSTIC
    value_type: U_WORD
    device_class: TEMPERATURE
    unit_of_measurement: "°C"
    disabled_by_default: true
  - platform: modbus_controller
    modbus_controller_id: "${prefix}_modbus"
    name: "${friendly_prefix} refrigerant gas side temperature"
    id: "${prefix}_refrigerant_gas_temp"
    register_type: holding
    address: 113
    entity_category: DIAGNOSTIC
    value_type: U_WORD
    device_class: TEMPERATURE
    unit_of_measurement: "°C"
    disabled_by_default: true
  - platform: modbus_controller
    modbus_controller_id: "${prefix}_modbus"
    name: "${friendly_prefix} high pressure"
    id: "${prefix}_high_pressure"
    register_type: holding
    address: 116
    entity_category: DIAGNOSTIC
    value_type: U_WORD
    device_class: PRESSURE
    unit_of_measurement: kPa
    disabled_by_default: true
  - platform: modbus_controller
    modbus_controller_id: "${prefix}_modbus"
    name: "${friendly_prefix} low pressure"
    id: "${prefix}_low_pressure"
    register_type: holding
    address: 117
    entity_category: DIAGNOSTIC
    value_type: U_WORD
    device_class: PRESSURE
    unit_of_measurement: kPa
    disabled_by_default: true
  - platform: modbus_controller
    modbus_controller_id: "${prefix}_modbus"
    name: "${friendly_prefix} operating current"
    id: "${prefix}_operating_current"
    register_type: holding
    address: 118
    entity_category: DIAGNOSTIC
    value_type: U_WORD
    device_class: CURRENT
    unit_of_measurement: A
    disabled_by_default: true
  - platform: modbus_controller
    modbus_controller_id: "${prefix}_modbus"
    name: "${friendly_prefix} operating voltage"
    id: "${prefix}_operating_voltage"
    register_type: holding
    address: 119
    entity_category: DIAGNOSTIC
    value_type: U_WORD
    device_class: VOLTAGE
    unit_of_measurement: V
    disabled_by_default: true
  - platform: modbus_controller
    modbus_controller_id: "${prefix}_modbus"
    name: "${friendly_prefix} operating time"
    id: "${prefix}_operating_time"
    register_type: holding
    address: 122
    entity_category: DIAGNOSTIC
    value_type: U_WORD
    device_class: DURATION
    unit_of_measurement: h
    disabled_by_default: true
  - platform: modbus_controller
    modbus_controller_id: "${prefix}_modbus"
    name: "${friendly_prefix} status code"
    id: "${prefix}_status_code"
    register_type: holding
    address: 124
    entity_category: DIAGNOSTIC
    value_type: U_WORD
  - platform: modbus_controller
    modbus_controller_id: "${prefix}_modbus"
    name: "${friendly_prefix} software version"
    id: "${prefix}_software_version"
    register_type: holding
    address: 130
    entity_category: DIAGNOSTIC
    value_type: U_WORD
    skip_updates: 720
    disabled_by_default: true
  - platform: modbus_controller
    modbus_controller_id: "${prefix}_modbus"
    name: "${friendly_prefix} controller version"
    id: "${prefix}_controller_version"
    register_type: holding
    address: 131
    value_type: U_WORD
    skip_updates: 720
    disabled_by_default: true
  - platform: modbus_controller
    modbus_controller_id: "${prefix}_modbus"
    name: "${friendly_prefix} DC bus current"
    id: "${prefix}_dc_bus_current"
    register_type: holding
    address: 133
    entity_category: DIAGNOSTIC
    value_type: U_WORD
    device_class: CURRENT
    unit_of_measurement: A
    disabled_by_default: true
  - platform: modbus_controller
    modbus_controller_id: "${prefix}_modbus"
    name: "${friendly_prefix} DC bus voltage"
    id: "${prefix}_dc_bus_voltage"
    register_type: holding
    address: 134
    entity_category: DIAGNOSTIC
    value_type: U_WORD
    device_class: VOLTAGE
    unit_of_measurement: V
    disabled_by_default: true
  - platform: modbus_controller
    modbus_controller_id: "${prefix}_modbus"
    name: "${friendly_prefix} TF module temperature"
    id: "${prefix}_tf_module_temperature"
    register_type: holding
    address: 135
    entity_category: DIAGNOSTIC
    value_type: U_WORD
    device_class: TEMPERATURE
    unit_of_measurement: "°C"
    disabled_by_default: true
  - platform: modbus_controller
    modbus_controller_id: "${prefix}_modbus"
    name: "${friendly_prefix} curve calculated setpoint"
    id: "${prefix}_curve_calculated_setpoint"
    register_type: holding
    address: 136
    entity_category: DIAGNOSTIC
    value_type: U_WORD
    device_class: TEMPERATURE
    unit_of_measurement: "°C"
    disabled_by_default: true
  - platform: modbus_controller
    modbus_controller_id: "${prefix}_modbus"
    name: "${friendly_prefix} water flow"
    id: "${prefix}_water_flow"
    register_type: holding
    address: 138
    unit_of_measurement: "m3/h"
    icon: "mdi:pump"
    value_type: U_WORD
    accuracy_decimals: 2
    filters:
      - multiply: .01
    entity_category: DIAGNOSTIC
    disabled_by_default: true
  - platform: modbus_controller
    modbus_controller_id: "${prefix}_modbus"
    name: "${friendly_prefix} output power"
    id: "${prefix}_power_output"
    register_type: holding
    address: 140
    device_class: POWER
    unit_of_measurement: W
    value_type: U_WORD
    accuracy_decimals: 0
    filters:
      - multiply: 10
  - platform: modbus_controller
    modbus_controller_id: "${prefix}_modbus"
    name: "${friendly_prefix} cooling setpoint upper limit"
    id: "${prefix}_temperature_setting_cooling_upper_limit"
    register_type: holding
    address: 201
    device_class: TEMPERATURE
    unit_of_measurement: "°C"
    value_type: U_WORD
    bitmask: 0xff
    entity_category: DIAGNOSTIC
    disabled_by_default: true
  - platform: modbus_controller
    modbus_controller_id: "${prefix}_modbus"
    name: "${friendly_prefix} cooling setpoint lower limit"
    id: "${prefix}_temperature_setting_cooling_lower_limit"
    register_type: holding
    address: 202
    device_class: TEMPERATURE
    unit_of_measurement: "°C"
    value_type: U_WORD
    bitmask: 0xff
    entity_category: DIAGNOSTIC
    disabled_by_default: true
  - platform: modbus_controller
    modbus_controller_id: "${prefix}_modbus"
    name: "${friendly_prefix} heating setpoint upper limit"
    id: "${prefix}_temperature_setting_heating_upper_limit"
    register_type: holding
    address: 203
    device_class: TEMPERATURE
    unit_of_measurement: "°C"
    value_type: U_WORD
    bitmask: 0xff
    entity_category: DIAGNOSTIC
    disabled_by_default: true
  - platform: modbus_controller
    modbus_controller_id: "${prefix}_modbus"
    name: "${friendly_prefix} heating setpoint lower limit"
    id: "${prefix}_temperature_setting_heating_lower_limit"
    register_type: holding
    address: 204
    device_class: TEMPERATURE
    unit_of_measurement: "°C"
    value_type: U_WORD
    bitmask: 0xff
    entity_category: DIAGNOSTIC
    disabled_by_default: true


select:
  - platform: template
    name: "${friendly_prefix} silent mode"
    id: "${prefix}_silent_mode"
    icon: "mdi:home-sound-out"
    options:
      - "normal"
      - "silent level 1"
      - "silent level 2"
    set_action:
      then:
        - switch.turn_on: "${prefix}_silent_mode_on_off"
  - platform: modbus_controller
    modbus_controller_id: "${prefix}_modbus"
    name: "${friendly_prefix} HVAC mode"
    id: "${prefix}_hvac_mode"
    icon: "mdi:heat-pump"
    address: 1
    value_type: U_WORD
    optionsmap:
      auto: 1
      cool: 2
      heat: 3
    entity_category: CONFIG

switch:
  - platform: modbus_controller
    modbus_controller_id: "${prefix}_modbus"
    name: "${friendly_prefix} on/off"
    id: "${prefix}_enable"
    icon: "mdi:power-standby"
    register_type: holding
    address: 0
    bitmask: 2
  - platform: modbus_controller
    modbus_controller_id: "${prefix}_modbus"
    name: "${friendly_prefix} eco mode"
    id: "${prefix}_eco_mode"
    icon: "mdi:sprout"
    register_type: holding
    address: 5
    bitmask: 0x400
    entity_category: CONFIG
  - platform: modbus_controller
    modbus_controller_id: "${prefix}_modbus"
    name: "${friendly_prefix} silent mode on/off"
    id: "${prefix}_silent_mode_on_off"
    icon: "mdi:home-sound-out"
    register_type: holding
    address: 5
    bitmask: 0x40
    entity_category: CONFIG
  - platform: modbus_controller
    modbus_controller_id: "${prefix}_modbus"
    name: "${friendly_prefix} curve mode"
    id: "${prefix}_curve_mode"
    icon: "mdi:snowflake-thermometer"
    register_type: holding
    address: 5
    bitmask: 0x1000
    entity_category: CONFIG

number:
  - platform: modbus_controller
    modbus_controller_id: "${prefix}_modbus"
    name: "${friendly_prefix} preset setpoint"
    id: "${prefix}_preset_setpoint"
    icon: "mdi:thermometer-water"
    device_class: TEMPERATURE
    entity_category: CONFIG
    address: 11
    value_type: U_WORD
    min_value: 25
    max_value: 55
    step: 1
  - platform: modbus_controller
    modbus_controller_id: "${prefix}_modbus"
    name: "${friendly_prefix} pump running time"
    id: "${prefix}_dhw_pump_running_time"
    entity_category: CONFIG
    device_class: DURATION
    address: 209
    value_type: U_WORD
    min_value: 5
    max_value: 120
    step: 1
    disabled_by_default: true
  - platform: modbus_controller
    modbus_controller_id: "${prefix}_modbus"
    name: "${friendly_prefix} cooling mode compressor startup interval"
    id: "${prefix}_cool_compressor_startup_interval"
    device_class: DURATION
    entity_category: CONFIG
    address: 223
    value_type: U_WORD
    min_value: 5
    max_value: 60
    step: 1
    disabled_by_default: true
  - platform: modbus_controller
    modbus_controller_id: "${prefix}_modbus"
    name: "${friendly_prefix} heating mode compressor startup interval"
    id: "${prefix}_heat_compressor_startup_interval"
    device_class: DURATION
    entity_category: CONFIG
    address: 228
    value_type: U_WORD
    min_value: 5
    max_value: 60
    step: 1
    disabled_by_default: true
  - platform: modbus_controller
    modbus_controller_id: "${prefix}_modbus"
    name: "${friendly_prefix} curve heating setpoint1"
    id: "${prefix}_curve_heating_setpoint1"
    device_class: TEMPERATURE
    entity_category: CONFIG
    address: 265
    value_type: U_WORD
    min_value: 25
    max_value: 65
    step: 1
    disabled_by_default: true
  - platform: modbus_controller
    modbus_controller_id: "${prefix}_modbus"
    name: "${friendly_prefix} curve heating setpoint2"
    id: "${prefix}_curve_heating_setpoint2"
    device_class: TEMPERATURE
    entity_category: CONFIG
    address: 266
    value_type: U_WORD
    min_value: 25
    max_value: 65
    step: 1
    disabled_by_default: true
  - platform: modbus_controller
    modbus_controller_id: "${prefix}_modbus"
    name: "${friendly_prefix} curve heating ambient1"
    id: "${prefix}_curve_heating_ambient1"
    device_class: TEMPERATURE
    entity_category: CONFIG
    address: 267
    value_type: S_WORD
    min_value: -25
    max_value: 35
    step: 1
    disabled_by_default: true
  - platform: modbus_controller
    modbus_controller_id: "${prefix}_modbus"
    name: "${friendly_prefix} curve heating ambient2"
    id: "${prefix}_curve_heating_ambient2"
    device_class: TEMPERATURE
    entity_category: CONFIG
    address: 268
    value_type: S_WORD
    min_value: -25
    max_value: 35
    step: 1
    disabled_by_default: true
  - platform: modbus_controller
    modbus_controller_id: "${prefix}_modbus"
    name: "${friendly_prefix} power limit"
    id: "${prefix}_power_limit"
    icon: "mdi:car-speed-limiter"
    address: 269
    value_type: U_WORD
    min_value: 0
    max_value: 8
    step: 1
    entity_category: CONFIG
    disabled_by_default: true

text_sensor:
  - platform: modbus_controller
    modbus_controller_id: "${prefix}_modbus"
    name: "${friendly_prefix} current HVAC mode"
    id: "${prefix}_current_hvac_mode"
    register_type: holding
    address: 101
    entity_category: DIAGNOSTIC
    raw_encode: HEXBYTES
    lambda: |-
      uint16_t value = modbus_controller::word_from_hex_str(x, 0);
      ESP_LOGD("main","Found hvac mode code: %d", value);
      switch (value) {
        case 0:  return std::string("idle");
        case 2:  return std::string("cool");
        case 3:  return std::string("heat");
        default: return x;
      }
  - platform: modbus_controller
    modbus_controller_id: "${prefix}_modbus"
    name: "${friendly_prefix} status"
    id: "${prefix}_status"
    register_type: holding
    address: 124
    entity_category: DIAGNOSTIC
    raw_encode: HEXBYTES
    icon: mdi:alert
    lambda: |-
      uint16_t value = modbus_controller::word_from_hex_str(x, 0);
      ESP_LOGD("main","Found device status int : %d", value);
      std::string mode_str;
      switch (value) {
        case 0:  return std::string("Fine");
        case 1:  return std::string("E0: Water flow fault (E8 displayed 3 times)");
        case 2:  return std::string("E1: Phase loss or neutral wire and live wire are connected");
        case 3:  return std::string("E2: Communication fault between controller and hydraulic");
        case 4:  return std::string("E3: Final outlet water temperature sensor (T1) fault");
        case 5:  return std::string("E4: Water tank temp. sensor (T5) fault");
        case 6:  return std::string("E5: The condensor outlet refrigerant temperature sensor (T3)");
        case 7:  return std::string("E6: The ambient temperature sensor (T4) fault");
        case 8:  return std::string("E7: Buffer tank up temperature sensor (Tbt1) fault");
        case 9:  return std::string("E8: Water flow failure");
        case 10: return std::string("E9: Compressor suction temp. sensor (Th) fault");
        case 11: return std::string("Ea: Compressor discharge temp. sensor (Tp) fault");
        case 12: return std::string("Eb: Solar temp. sensor (Tsolar) fault");
        case 13: return std::string("Ec: The balance tank low temp. sensor (Tbt2) fault");
        case 14: return std::string("Ed: The plate exchanger water inlet temp. sensor (Tw_in) fault");
        case 15: return std::string("Ee: The main control board of hydraulic module EEPROM");
        case 20: return std::string("P0: Low pressure protection");
        case 21: return std::string("P1: High pressure protection");
        case 23: return std::string("P3: Compressor overcurrent protection");
        case 24: return std::string("P4: compressor discharge temp. too high protection");
        case 25: return std::string("P5: high temperature difference protection between water inlet and water outlet of the plate heat exchanger");
        case 26: return std::string("P6: inverter module protection");
        case 31: return std::string("Pb: Anti-freeze mode protection");
        case 33: return std::string("Pd: high temperature protection of refrigerant outlet temp. of condenser");
        case 38: return std::string("Pp: water inlet temperature is higher than water outlet in heating mode");
        case 39: return std::string("H0: communication fault between main control board of hydraulic module and main control board PCB B");
        case 40: return std::string("H1");
        case 41: return std::string("H2");
        case 42: return std::string("H3");
        case 43: return std::string("H4");
        case 44: return std::string("H5");
        case 45: return std::string("H6: DC fan motor fault");
        case 46: return std::string("H7: main circuit voltage protection fault");
        case 47: return std::string("H8: pressure sensor fault");
        case 48: return std::string("H9");
        case 49: return std::string("Ha");
        case 50: return std::string("Hb");
        case 52: return std::string("Hd");
        case 53: return std::string("He");
        case 54: return std::string("Hf: inverter module board EE PROM fault");
        case 55: return std::string("Hh");
        case 57: return std::string("Hp");
        case 65: return std::string("C7");
        case 112:return std::string("bH");
        case 116:return std::string("F1");
        case 134:return std::string("L0: DC compressor inverter module fault");
        case 135:return std::string("L1: DC bus low voltage protection (from inverter module mostly when compressor running)");
        case 136:return std::string("L2: DC bus high voltage protection from DC driver");
        case 138:return std::string("L4: MCE fault");
        case 139:return std::string("L5: Zero speed protection");
        case 141:return std::string("L7: Phase sequence fault");
        case 142:return std::string("L8: Compressor frequency variation greater than 15Hz within one second protection");
        case 143:return std::string("L9: Actual compressor frequency differs from target frequency by more than 15Hz protection");
        default: return x;
      }
